<Window x:Class="WinAirvid.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        WindowState="Maximized"
        xmlns:proto="clr-namespace:libairvidproto.model;assembly=libairvidproto"
        xmlns:lc="clr-namespace:WinAirvid"
        xmlns:wpfcommon="clr-namespace:WpfCommon;assembly=WpfCommon"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        Title="MainWindow">
    <Window.DataContext>
        <lc:MainWindowVM/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid>
            <Grid.Visibility>
                <Binding Path="IsProcessing">
                    <Binding.Converter>
                        <wpfcommon:CompositeConverter>
                            <wpfcommon:InverseBooleanConverter/>
                            <BooleanToVisibilityConverter/>
                        </wpfcommon:CompositeConverter>
                    </Binding.Converter>
                </Binding>
            </Grid.Visibility>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>

            <TreeView Grid.Column="0" ItemsSource="{Binding Resources}" x:Name="treeResources">
                <i:Interaction.Behaviors>
                    <lc:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}"/>
                </i:Interaction.Behaviors>
                <TreeView.ItemContainerStyle>
                    <!-- This Style binds a TreeViewItem to a PersonViewModel. -->
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type lc:ServerVM}">
                        <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type lc:FolderVM}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="folder.png"/>
                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>

                    <HierarchicalDataTemplate DataType="{x:Type lc:VideoVM}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="video.png"/>
                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>
            <Grid Grid.Column="1" DataContext="{Binding SelectedItem}">
                <Grid.Visibility>
                    <Binding Path="DataContext.SelectedItem" RelativeSource="{RelativeSource AncestorType=Window}">
                        <Binding.Converter>
                            <wpfcommon:CompositeConverter>
                                <lc:VideoSelectedConverter/>
                                <BooleanToVisibilityConverter/>
                            </wpfcommon:CompositeConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.Visibility>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0">FileSize:</TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding MediaInfo.FileSize}"></TextBlock>

                <TextBlock Margin="4,0,0,0" Grid.Row="0" Grid.Column="2">Duration:</TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="3" Text="{Binding MediaInfo.DurationSeconds}"></TextBlock>
                
                <Button Height="25" Width="100"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Grid.ColumnSpan="4" Grid.Row="1" 
                        Command="{Binding DataContext.PlayCmd, RelativeSource={RelativeSource AncestorType=Window}}">Play</Button>

                <Image VerticalAlignment="Top" HorizontalAlignment="Stretch" Grid.Row="2" Grid.ColumnSpan="4" Margin="4" Source="{Binding Thumbnail}"></Image>
            </Grid>
        </Grid>
        <TextBlock 
            Text="Loading"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            >
            <TextBlock.Visibility>
                <Binding Path="IsProcessing">
                    <Binding.Converter>
                        <BooleanToVisibilityConverter/>
                    </Binding.Converter>
                </Binding>
            </TextBlock.Visibility>
        </TextBlock>
        
        <DockPanel Grid.Row="1" LastChildFill="True">
            <TextBlock DockPanel.Dock="Left">Player Path:</TextBlock>
            <Button DockPanel.Dock="Right">...</Button>
            <TextBox DockPanel.Dock="Left">
                <TextBox.Text>
                    <Binding Path="PlayerPath"/>
                </TextBox.Text>
            </TextBox>
        </DockPanel>
    </Grid>
</Window>
